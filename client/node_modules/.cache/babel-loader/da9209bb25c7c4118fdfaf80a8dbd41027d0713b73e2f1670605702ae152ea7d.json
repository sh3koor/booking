{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sh3ko\\\\Desktop\\\\Courses\\\\Web-Development-With-Angela\\\\React\\\\Booking App\\\\client\\\\src\\\\UserContext.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext({});\nexport function UserContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = React.useState(null);\n  React.useEffect(() => {\n    // if user info is empty get it from the /profile endpoint\n    if (!user) {\n      axios.get(\"/profile\", {\n        withCredentials: true\n      }).then(result => {}).catch(err => {});\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    // useContext will return the value of this provider which is in this case is an object\n    _jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        setUser\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(UserContextProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["axios","React","useEffect","jsxDEV","_jsxDEV","UserContext","createContext","UserContextProvider","_ref","_s","children","user","setUser","useState","get","withCredentials","then","result","catch","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sh3ko/Desktop/Courses/Web-Development-With-Angela/React/Booking App/client/src/UserContext.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nexport const UserContext = React.createContext({});\r\n\r\nexport function UserContextProvider({ children }) {\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() => {\r\n    // if user info is empty get it from the /profile endpoint\r\n    if (!user) {\r\n      axios\r\n        .get(\"/profile\", { withCredentials: true })\r\n        .then((result) => {})\r\n        .catch((err) => {});\r\n    }\r\n  }, []);\r\n  return (\r\n    // useContext will return the value of this provider which is in this case is an object\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,CAAC,CAAC,CAAC,CAAC;AAElD,OAAO,SAASC,mBAAmBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;EAC5CZ,KAAK,CAACC,SAAS,CAAC,MAAM;IACpB;IACA,IAAI,CAACS,IAAI,EAAE;MACTX,KAAK,CACFc,GAAG,CAAC,UAAU,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC,CAC1CC,IAAI,CAAEC,MAAM,IAAK,CAAC,CAAC,CAAC,CACpBC,KAAK,CAAEC,GAAG,IAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACAf,OAAA,CAACC,WAAW,CAACe,QAAQ;MAACC,KAAK,EAAE;QAAEV,IAAI;QAAEC;MAAQ,CAAE;MAAAF,QAAA,EAC5CA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;AAE3B;AAAChB,EAAA,CAjBeF,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}